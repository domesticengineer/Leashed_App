import React, { useState, useEffect } from 'react';
import { ServiceRequest } from '@/entities/ServiceRequest';
import { Pet } from '@/entities/Pet';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { createPageUrl } from '@/utils';
import { Link } from 'react-router-dom';
import { format } from 'date-fns';
import { Loader2, Dog, Calendar, History } from 'lucide-react';

export default function ClientDashboard({ user }) {
  const [upcomingServices, setUpcomingServices] = useState([]);
  const [loading, setLoading] = useState(true);
  const [pets, setPets] = useState({});

  useEffect(() => {
    const loadData = async () => {
      try {
        const [servicesData, petsData] = await Promise.all([
          ServiceRequest.filter({ 
            client_email: user.email,
            status: { $in: ['Pending', 'Accepted', 'In Progress'] }
          }, '-requested_date_time'),
          Pet.filter({ owner_email: user.email })
        ]);
        
        const petsMap = petsData.reduce((acc, pet) => {
          acc[pet.id] = pet;
          return acc;
        }, {});

        setPets(petsMap);
        setUpcomingServices(servicesData);
      } catch (error) {
        console.error("Failed to load dashboard data", error);
      } finally {
        setLoading(false);
      }
    };

    loadData();
  }, [user.email]);

  return (
    <div>
        <h1 className="text-3xl font-bold text-gray-800 mb-2">Welcome, {user.full_name}!</h1>
        <p className="text-gray-600 mb-8">Here's what's happening with your furry friends.</p>
        
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            <Link to={createPageUrl('Pets')}>
                <Card className="hover:bg-gray-50 transition-colors h-full">
                    <CardHeader className="flex flex-row items-center justify-between pb-2">
                        <CardTitle className="text-sm font-medium">My Pets</CardTitle>
                        <Dog className="w-4 h-4 text-muted-foreground" />
                    </CardHeader>
                    <CardContent>
                        <div className="text-2xl font-bold">{Object.keys(pets).length}</div>
                        <p className="text-xs text-muted-foreground">Manage your pet profiles</p>
                    </CardContent>
                </Card>
            </Link>
            <Link to={createPageUrl('BookService')}>
                <Card className="hover:bg-gray-50 transition-colors h-full">
                    <CardHeader className="flex flex-row items-center justify-between pb-2">
                        <CardTitle className="text-sm font-medium">Book a Service</CardTitle>
                        <Calendar className="w-4 h-4 text-muted-foreground" />
                    </CardHeader>
                    <CardContent>
                        <p className="text-sm text-muted-foreground pt-2">Schedule a new walk or sitting for your pet.</p>
                    </CardContent>
                </Card>
            </Link>
        </div>

        <Card className="mt-8">
            <CardHeader>
                <CardTitle>Upcoming Services</CardTitle>
            </CardHeader>
            <CardContent>
                {loading ? (
                    <div className="flex justify-center items-center py-8">
                        <Loader2 className="w-8 h-8 animate-spin text-blue-500" />
                    </div>
                ) : upcomingServices.length === 0 ? (
                    <p className="text-gray-500 text-center py-8">You have no upcoming services scheduled.</p>
                ) : (
                    <ul className="space-y-4">
                        {upcomingServices.map(service => (
                            <li key={service.id} className="p-4 border rounded-lg flex flex-col md:flex-row justify-between md:items-center">
                                <div>
                                    <p className="font-semibold">{service.service_type} for {pets[service.pet_id]?.name || 'your pet'}</p>
                                    <p className="text-sm text-gray-600">{format(new Date(service.requested_date_time), 'PPpp')}</p>
                                </div>
                                <span className={`mt-2 md:mt-0 px-2 py-1 text-xs font-semibold rounded-full ${
                                    service.status === 'Pending' ? 'bg-yellow-100 text-yellow-800' : 
                                    service.status === 'Accepted' ? 'bg-green-100 text-green-800' :
                                    'bg-blue-100 text-blue-800'
                                }`}>{service.status}</span>
                            </li>
                        ))}
                    </ul>
                )}
            </CardContent>
        </Card>
    </div>
  );
}
